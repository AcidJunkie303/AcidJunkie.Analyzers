code:
  Console.WriteLine("abc");
  DisposableRefType? instance;
  instance = null;
  
  using var aa = new DisposableRefType();
  throw new Exception("aaa");

  using (var aa = new DisposableRefType())
  {
      throw new Exception("bbb");
  }

  using (new DisposableRefType())
  {
      throw new Exception("ccc");
  }
  
  try
  {
    Console.WriteLine();
  }
  finally
  {
    instance?.Dispose();
  }
    

Tree:

  BlockSyntax                                           | {\n        Console.WriteLine("abc");\nDisposableRefType? instance;\ninstance = null;\n\nusing var aa = new DisposableRefType();\nthrow new Exception("aaa");\n\nusing (var aa = new DisposableRefType())\n{\n    throw new Exception("bbb");\n}\n\nusing (new DisposableRefType())\n{\n    throw new Exception("ccc");\n}\n\ntry\n{\n   Console.WriteLine();\n}\nfinally\n{\n   instance?.Dispose();\n}\n\n    }
    ExpressionStatementSyntax                           | Console.WriteLine("abc");
      InvocationExpressionSyntax                        | Console.WriteLine("abc")
        MemberAccessExpressionSyntax                    | Console.WriteLine
          IdentifierNameSyntax                          | Console
          IdentifierNameSyntax                          | WriteLine
        ArgumentListSyntax                              | ("abc")
          ArgumentSyntax                                | "abc"
            LiteralExpressionSyntax                     | "abc"
    LocalDeclarationStatementSyntax                     | DisposableRefType? instance;
      VariableDeclarationSyntax                         | DisposableRefType? instance
        NullableTypeSyntax                              | DisposableRefType?
          IdentifierNameSyntax                          | DisposableRefType
        VariableDeclaratorSyntax                        | instance
    ExpressionStatementSyntax                           | instance = null;
      AssignmentExpressionSyntax                        | instance = null
        IdentifierNameSyntax                            | instance
        LiteralExpressionSyntax                         | null
    LocalDeclarationStatementSyntax                     | using var aa = new DisposableRefType();
      VariableDeclarationSyntax                         | var aa = new DisposableRefType()
        IdentifierNameSyntax                            | var
        VariableDeclaratorSyntax                        | aa = new DisposableRefType()
          EqualsValueClauseSyntax                       | = new DisposableRefType()
            ObjectCreationExpressionSyntax              | new DisposableRefType()
              IdentifierNameSyntax                      | DisposableRefType
              ArgumentListSyntax                        | ()
    ThrowStatementSyntax                                | throw new Exception("aaa");
      ObjectCreationExpressionSyntax                    | new Exception("aaa")
        IdentifierNameSyntax                            | Exception
        ArgumentListSyntax                              | ("aaa")
          ArgumentSyntax                                | "aaa"
            LiteralExpressionSyntax                     | "aaa"
    UsingStatementSyntax                                | using (var aa = new DisposableRefType())\n{\n    throw new Exception("bbb");\n}
      VariableDeclarationSyntax                         | var aa = new DisposableRefType()
        IdentifierNameSyntax                            | var
        VariableDeclaratorSyntax                        | aa = new DisposableRefType()
          EqualsValueClauseSyntax                       | = new DisposableRefType()
            ObjectCreationExpressionSyntax              | new DisposableRefType()
              IdentifierNameSyntax                      | DisposableRefType
              ArgumentListSyntax                        | ()
      BlockSyntax                                       | {\n    throw new Exception("bbb");\n}
        ThrowStatementSyntax                            | throw new Exception("bbb");
          ObjectCreationExpressionSyntax                | new Exception("bbb")
            IdentifierNameSyntax                        | Exception
            ArgumentListSyntax                          | ("bbb")
              ArgumentSyntax                            | "bbb"
                LiteralExpressionSyntax                 | "bbb"
    UsingStatementSyntax                                | using (new DisposableRefType())\n{\n    throw new Exception("ccc");\n}
      ObjectCreationExpressionSyntax                    | new DisposableRefType()
        IdentifierNameSyntax                            | DisposableRefType
        ArgumentListSyntax                              | ()
      BlockSyntax                                       | {\n    throw new Exception("ccc");\n}
        ThrowStatementSyntax                            | throw new Exception("ccc");
          ObjectCreationExpressionSyntax                | new Exception("ccc")
            IdentifierNameSyntax                        | Exception
            ArgumentListSyntax                          | ("ccc")
              ArgumentSyntax                            | "ccc"
                LiteralExpressionSyntax                 | "ccc"
    TryStatementSyntax                                  | try\n{\n   Console.WriteLine();\n}\nfinally\n{\n   instance?.Dispose();\n}
      BlockSyntax                                       | {\n   Console.WriteLine();\n}
        ExpressionStatementSyntax                       | Console.WriteLine();
          InvocationExpressionSyntax                    | Console.WriteLine()
            MemberAccessExpressionSyntax                | Console.WriteLine
              IdentifierNameSyntax                      | Console
              IdentifierNameSyntax                      | WriteLine
            ArgumentListSyntax                          | ()
      FinallyClauseSyntax                               | finally\n{\n   instance?.Dispose();\n}
        BlockSyntax                                     | {\n   instance?.Dispose();\n}
          ExpressionStatementSyntax                     | instance?.Dispose();
            ConditionalAccessExpressionSyntax           | instance?.Dispose()
              IdentifierNameSyntax                      | instance
              InvocationExpressionSyntax                | .Dispose()
                MemberBindingExpressionSyntax           | .Dispose
                  IdentifierNameSyntax                  | Dispose
                ArgumentListSyntax                      | ()
